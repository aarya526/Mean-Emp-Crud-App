{"version":3,"sources":["./src/environments/environment.ts","./src/app/common/employee.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/employee.service.ts","./src/app/components/employee/employee.component.ts","./src/app/components/employee/employee.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAO,MAAM,QAAQ;CAMpB;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KACzB;;wEAFY,YAAY;4FAAZ,YAAY;QCRzB,2EAA+B;;6FDQlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACA;AACT;AAC8B;AAChC;AACU;;;AAEvD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,yFAAiB,EAAE;IAC9C,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE;IACpD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE;CACvD,CAAC;AAaK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;SAC7B;mIAIU,SAAS,mBAXL,2DAAY,EAAE,yFAAiB,aAE5C,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;6FAMF,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,EAAE,yFAAiB,CAAC;gBAC/C,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;oBACX,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;iBAC7B;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,eAAe;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,QAAG,GAAW,WAAW,CAAC;IACa,CAAC;IAExC,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,CAAC;IACD,YAAY,CAAC,GAAa;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACvC,CAAC;IACD,cAAc,CAAC,GAAa;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;IACtD,CAAC;IACD,cAAc,CAAC,EAAE;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;IAC/C,CAAC;;8EAfU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEC;;;;;;ICaf,0EACI;IAAA,8EACJ;IAAA,4DAAM;;;IAHV,sEACI;IAAA,qHAEM;IACV,4DAAM;;;;IAHI,0DAA2B;IAA3B,iHAA2B;;;IAWjC,0EACI;IAAA,kFACJ;IAAA,4DAAM;;;IAHV,sEACI;IAAA,qHAEM;IACV,4DAAM;;;;IAHI,0DAA+B;IAA/B,iHAA+B;;;IAWrC,0EACI;IAAA,gFACJ;IAAA,4DAAM;;;IAHV,sEACI;IAAA,qHAEM;IACV,4DAAM;;;;IAHI,0DAA6B;IAA7B,iHAA6B;;;IAWnC,0EACI;IAAA,gFACJ;IAAA,4DAAM;;;IAHV,sEACI;IAAA,qHAEM;IACV,4DAAM;;;;IAHI,0DAA6B;IAA7B,iHAA6B;;;;IA6BvC,qEACI;IAAA,qEAAI;IAAA,uDAAU;IAAA,4DAAK;IACnB,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,uDAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,yEAAyE;IAAnD,yVAAyB;IAA0B,yEAC1C;IAAA,kEAAM;IAAA,4DAAI;IAAA,4DAAI;IAAA,yEACc;IAAhC,+VAA+B;IAAC,yEAC3B;IAAA,kEAAM;IAAA,4DAAI;IAAA,4DAAI;IAClD,4DAAK;IACT,4DAAK;;;IATG,0DAAU;IAAV,2EAAU;IACV,0DAAc;IAAd,+EAAc;IACd,0DAAY;IAAZ,6EAAY;IACZ,0DAAY;IAAZ,6EAAY;;ADvE7C,MAAM,iBAAiB;IAI5B,YAAoB,UAA2B;QAA3B,eAAU,GAAV,UAAU,CAAiB;QAH/C,qBAAgB,GAAa,IAAI,gEAAQ,EAAE,CAAC;QAC5C,kBAAa,GAAe,EAAE,CAAC;IAEmB,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,EAAE,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACtE,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,CAAC,CAAC,KAAK,CAAC;oBACN,IAAI,EAAE,sBAAsB;oBAC5B,aAAa,EAAE,KAAK;oBACpB,OAAO,EAAE,SAAS;iBACnB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACpE,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,CAAC,CAAC,KAAK,CAAC;oBACN,IAAI,EAAE,oBAAoB;oBAC1B,aAAa,EAAE,IAAI;oBACnB,OAAO,EAAE,SAAS;iBACnB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,cAAc,CAAC,EAAE;QACf,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACnD,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,CAAC,CAAC,KAAK,CAAC;gBACN,IAAI,EAAE,sBAAsB;gBAC5B,aAAa,EAAE,IAAI;gBACnB,OAAO,EAAE,SAAS;aACnB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAClD,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY,CAAC,GAAa;QACxB,IAAI,CAAC,gBAAgB,GAAG;YACtB,GAAG,EAAE,GAAG,CAAC,GAAG;YACZ,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,QAAQ,EAAE,GAAG,CAAC,QAAQ;YACtB,MAAM,EAAE,GAAG,CAAC,MAAM;SACnB,CAAC;IACJ,CAAC;IACD,SAAS,CAAC,IAAa;QACrB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;QACD,IAAI,CAAC,gBAAgB,GAAG;YACtB,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,IAAI;SACb,CAAC;IACJ,CAAC;;kFApEU,iBAAiB;iGAAjB,iBAAiB;;QCV9B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,8EAAmB;QAAA,4DAAK;QAC5B,6EACI;QADgB,sRAAU,iBAAsB,IAAC;QACjD,4EACA;QADiD,oMAAkC;QAAnF,4DACA;QAAA,0EACI;QAAA,gFAGA;QAFiC,qMAAmC;QADpE,4DAGA;QAAA,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,gHAIM;QACV,4DAAM;QACN,0EACI;QAAA,iFAGA;QAFqC,yMAAuC;QAD5E,4DAGA;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,gHAIM;QACV,4DAAM;QACN,0EACI;QAAA,iFAGA;QAFmC,uMAAqC;QADxE,4DAGA;QAAA,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,gHAIM;QACV,4DAAM;QACN,0EACI;QAAA,iFAGA;QAFmC,uMAAqC;QADxE,4DAGA;QAAA,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,gHAIM;QACV,4DAAM;QACN,0EACI;QAAA,8EAE8C;QAAA,mEAC9C;QAAA,4DAAS;QACT,8EACsC;QAAlC,uRAAS,kBAAuB,IAAC;QAAC,kEACtC;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAO;QACX,4DAAM;QACN,2EACI;QAAA,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,iEAAS;QACb,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,+GAUK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;QAvFuE,2DAAkC;QAAlC,6FAAkC;QAG9C,0DAAmC;QAAnC,8FAAmC;QAG9D,0DAAkD;QAAlD,2GAAkD;QAQnB,0DAAuC;QAAvC,kGAAuC;QAGtE,0DAA8D;QAA9D,2GAA8D;QAQjC,0DAAqC;QAArC,gGAAqC;QAGlE,0DAAwD;QAAxD,2GAAwD;QAQ3B,0DAAqC;QAArC,gGAAqC;QAGlE,0DAAwD;QAAxD,2GAAwD;QAQ1D,0DAAqH;QAArH,sRAAqH;QAsBvG,2DAAgB;QAAhB,sFAAgB;;6FDnErD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Employee {\n  _id: string;\n  name: string;\n  office: string;\n  position: string;\n  salary: number;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'crud-frontend';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'home', component: EmployeeComponent },\n  { path: '', pathMatch: 'full', redirectTo: '/home' },\n  { path: '**', pathMatch: 'full', redirectTo: '/home' },\n];\n@NgModule({\n  declarations: [AppComponent, EmployeeComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Employee } from '../common/employee';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmployeeService {\n  url: string = '/employee';\n  constructor(private http: HttpClient) {}\n\n  getAllEmployees() {\n    return this.http.get<Employee[]>(this.url);\n  }\n  saveEmployee(emp: Employee) {\n    return this.http.post(this.url, emp);\n  }\n  updateEmployee(emp: Employee) {\n    return this.http.put(`${this.url}/${emp._id}`, emp);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Employee } from 'src/app/common/employee';\nimport { EmployeeService } from 'src/app/services/employee.service';\ndeclare var M: any;\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css'],\n})\nexport class EmployeeComponent implements OnInit {\n  selectedEmployee: Employee = new Employee();\n  employeesList: Employee[] = [];\n\n  constructor(private empService: EmployeeService) {}\n\n  ngOnInit(): void {\n    this.resetForm();\n    this.allEmployees();\n  }\n  onSubmit(form: NgForm) {\n    if (this.selectedEmployee._id != '') {\n      this.empService.updateEmployee(this.selectedEmployee).subscribe((res) => {\n        this.allEmployees();\n        this.resetForm(form);\n        M.toast({\n          html: 'Updated Successfully',\n          displayLength: 30000,\n          classes: 'rounded',\n        });\n      });\n    } else {\n      this.empService.saveEmployee(this.selectedEmployee).subscribe((res) => {\n        this.allEmployees();\n        this.resetForm(form);\n        M.toast({\n          html: 'Added Successfully',\n          displayLength: 3000,\n          classes: 'rounded',\n        });\n      });\n    }\n  }\n  deleteEmployee(id) {\n    this.empService.deleteEmployee(id).subscribe((res) => {\n      this.allEmployees();\n      M.toast({\n        html: 'Deleted Successfully',\n        displayLength: 3000,\n        classes: 'rounded',\n      });\n    });\n  }\n  allEmployees() {\n    this.empService.getAllEmployees().subscribe((res) => {\n      this.employeesList = res;\n    });\n  }\n  editEmployee(emp: Employee) {\n    this.selectedEmployee = {\n      _id: emp._id,\n      name: emp.name,\n      salary: emp.salary,\n      position: emp.position,\n      office: emp.office,\n    };\n  }\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n    }\n    this.selectedEmployee = {\n      _id: '',\n      name: '',\n      office: '',\n      position: '',\n      salary: null,\n    };\n  }\n}\n","<div class=\"row\">\n    <div class=\"col s12 m12\">\n        <div class=\"card grey lighten-5\">\n            <div class=\"card-content black-text\">\n                <div class=\"row\">\n                    <div class=\"col m5\">\n                        <h4>Add/Update Employee</h4>\n                        <form #employeeForm (submit)=\"onSubmit(employeeForm)\">\n                            <input type=\"hidden\" name=\"selectedEmployee._id\" [(ngModel)]=\"selectedEmployee._id\" />\n                            <div class=\"input-field col s12\">\n                                <input placeholder=\"Enter Full Name\" type=\"text\" class=\"validate\"\n                                    name=\"selectedEmployee.name\" [(ngModel)]=\"selectedEmployee.name\" #name=\"ngModel\"\n                                    required>\n                                <label>Name</label>\n                                <div *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n                                    <div *ngIf=\"name.errors?.required\" class=\"error\">\n                                        Name is required.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"input-field col s12\">\n                                <input placeholder=\"Enter Position\" type=\"text\" class=\"validate\"\n                                    name=\"selectedEmployee.position\" [(ngModel)]=\"selectedEmployee.position\"\n                                    #position=\"ngModel\" required>\n                                <label>Position</label>\n                                <div *ngIf=\"position.invalid && (position.dirty || position.touched)\">\n                                    <div *ngIf=\"position.errors?.required\" class=\"error\">\n                                        Position is required.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"input-field col s12\">\n                                <input placeholder=\"Enter Office\" type=\"text\" class=\"validate\"\n                                    name=\"selectedEmployee.office\" [(ngModel)]=\"selectedEmployee.office\"\n                                    #office=\"ngModel\" required>\n                                <label>Office</label>\n                                <div *ngIf=\"office.invalid && (office.dirty || office.touched)\">\n                                    <div *ngIf=\"office.errors?.required\" class=\"error\">\n                                        Office is required.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"input-field col s12\">\n                                <input placeholder=\"Enter Salary\" type=\"number\" class=\"validate\"\n                                    name=\"selectedEmployee.salary\" [(ngModel)]=\"selectedEmployee.salary\"\n                                    #salary=\"ngModel\" required>\n                                <label>Salary</label>\n                                <div *ngIf=\"salary.invalid && (salary.dirty || salary.touched)\">\n                                    <div *ngIf=\"salary.errors?.required\" class=\"error\">\n                                        Salary is required.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"input-field col s12\">\n                                <button class=\"btn waves-effect waves-light\"\n                                    [disabled]=\"name.errors?.required || office.errors?.required || position.errors?.required || salary.errors?.required\"\n                                    style=\"margin-right: 20px;\" type=\"submit\">Submit\n                                </button>\n                                <button class=\"btn waves-effect pink\" type=\"button\"\n                                    (click)=\"resetForm(employeeForm)\">Reset\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"col m7\">\n                        <h4>Existing Employees</h4>\n                        <table class=\"responsive-table highlight\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Position</th>\n                                    <th>Office</th>\n                                    <th>Salary</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let e of employeesList\">\n                                    <td>{{e.name}}</td>\n                                    <td>{{e.position}}</td>\n                                    <td>{{e.office}}</td>\n                                    <td>{{e.salary}}</td>\n                                    <td><a class=\"action-btn\" (click)=\"editEmployee(e)\" style=\"color: #283593 ;\"><i\n                                                class=\"material-icons\">create</i></a><a class=\"action-btn\"\n                                            style=\"color:#263238;\" (click)=\"deleteEmployee(e._id)\"><i\n                                                class=\" material-icons\">delete</i></a>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}